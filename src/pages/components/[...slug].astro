---
import { ROUTES } from '@/constants/routes'
import { componentsSections } from '@/content/config'
import { getCollection } from 'astro:content'

import { siteConfig } from '@/config/site'
import RootLayout from '@/layouts/root-layout.astro'
import { Icon } from '@/components/ui/icon'
import { CreditsChip } from '@/components/react/credits-chip'
import BottomNavigation from '@/components/bottom-navigation.astro'
import ComponentsHeader from '@/components/components-header.astro'
import ContentContainer from '@/components/content-container.astro'
import RadixIcon from '@/components/icons/radix.svg.astro'
import ShadcnIcon from '@/components/icons/shadcn.svg.astro'
import OnThisPage from '@/components/on-this-page.astro'
import Pre from '@/components/pre.astro'

export async function getStaticPaths() {
  const docsEntries = await getCollection('components')
  return docsEntries.map((entry) => ({
    params: { slug: entry.slug },
    props: { entry },
  }))
}

const { entry } = Astro.props
const { Content, headings: contentHeadings } = await entry.render()
const {
  data: {
    group,
    title,
    subtitle,
    thumbnail,
    thumbnailDark,
    guidelines,
    shadcn,
    radix,
  },
  slug,
} = entry

const headings = contentHeadings.filter(
  (heading) => heading.depth > 1 && heading.depth <= 3
)

const prevAndNext = (() => {
  const navItems = siteConfig.sideNav[ROUTES.COMPONENTS]
  const currentIndex = navItems.findIndex((item) => item.slug === slug)

  const prev = currentIndex === 0 ? null : navItems[currentIndex - 1]
  const next =
    currentIndex === navItems.length - 1 ? null : navItems[currentIndex + 1]

  return {
    prev: prev
      ? { title: prev.title, url: ROUTES.COMPONENTS + '/' + prev.slug }
      : null,
    next: next
      ? { title: next.title, url: ROUTES.COMPONENTS + '/' + next.slug }
      : null,
  }
})()
---

<RootLayout title={`Components - ${title}`}>
  <ContentContainer>
    <ComponentsHeader
      title={title}
      subtitle={subtitle}
      thumbnail={{
        default: thumbnail,
        dark: thumbnailDark,
      }}
      bgImage={componentsSections[group as keyof typeof componentsSections].bg}
    />
    <div class="flex w-full">
      <section class="mdx z-0 max-w-5xl flex-1 pb-24 md:px-4 md:pb-4 xl:ml-40">
        <div class="flex w-full flex-wrap gap-3 py-4">
          {
            shadcn && (
              <CreditsChip href={shadcn} label="Shadcn UI">
                <ShadcnIcon class="h-[18px] w-[18px]" />
              </CreditsChip>
            )
          }
          {
            radix && (
              <CreditsChip href={radix} label="Radix UI">
                <RadixIcon class="h-[18px] w-[18px] p-0.5" />
              </CreditsChip>
            )
          }
          {
            guidelines && (
              <CreditsChip href={guidelines} label="Guidelines">
                <Icon symbol="design_services" />
              </CreditsChip>
            )
          }
        </div>
        <Content
          components={{
            pre: Pre,
          }}
        />
        <BottomNavigation {...prevAndNext} />
      </section>
      <OnThisPage title={title} links={headings} />
    </div>
  </ContentContainer>
</RootLayout>
